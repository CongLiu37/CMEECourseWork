Starting weekly feedback for Cong, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 4.43 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, Feedback, Week1, Week2

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*.pyc
*.pyo
*.tif
*.png

**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:

**********************************************************************
Project: CMEECourseWork
Description: Course work of Computational Methods in Ecology and Evolution(CMEE)
Languages: shell, Python 3, R 4.0, LaTeX
Project Structure: The work of each week is saved in Week*/, which is usually composed of Code/, Data/, Results/, ect
Usage: Seen in each file
Auther: Cong Liu (cong.liu20@imperial.ac.uk)


**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Writeup, Data, Code, Results

Found the following files: README.txt, temporary.tmp

Checking for readme file in weekly directory...

Found README in parent directory, named: README.txt

Printing contents of README.txt:

**********************************************************************
Project: Week1
Description: Course work of week 1
Auther: Cong Liu (cong.liu20@imperial.ac.uk)

**********************************************************************

Found following files in results directory: README.txt...

Ideally, Results directory should be empty other than, perhaps a .gitkeep. 

 0.5 pts deducted per results file 

Current Points = 99.5

Found 13 code files: README.txt, ConcatenateTwoFiles.sh, tiff2png.sh, UnixPrac1.txt, variables.sh, CountLines.sh, FirstBiblio.bib, csvtospace.sh, CompileLaTeX.sh, boilerplate.sh, FirstExample.tex, tabtocsv.sh, MyExampleScript.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file README.txt...

File contents are:

**********************************************************************
Project: Code
Description: Scripts of week 1
Languages: shell, LaTeX
Usage & Work Path : Seen in each script
Auther: Cong Liu (cong.liu20@imperial.ac.uk)

**********************************************************************

Testing README.txt...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: ConcatenateTwoFiles.sh
#Work Path: CMEECourseWork/Week1
#Input: Two files saved in Data/
#Function: Merge input files
#Output: Merged file of inputs, saved as Results/Merged
#Usage: bash ConcatenateTwoFiles.sh [file1] [file2]
#Date: Oct 2020

if [ -z $1 ];
    then
        echo "Two files should be inputted"
    else
        if [ -z $2 ];
            then
                echo "Only one file is inoutted"
                echo "Two files should be inputted"
            else
                if [ -e Data/$1 ];
                    then
                        if [ -e Data/$2 ];
                            then 
                                file1=Data/$1
                                file2=Data/$2
                                file3=Results/Merged
                                cat $file1 >> $file3
                                cat $file2 >> $file3
                                echo "The merged file is"
                                cat $file3
                            else
                                echo "$2 does not exist in Data/"
                        fi
                    else
                        echo "$1 does not exist in Data/"
                fi
        fi
fi

echo "Done"
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Two files should be inputted
Done

**********************************************************************

Code ran without errors

Time consumed = 0.00367s

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: tiff2png.sh
#Work Path: CMEECourseWork/Week1
#Input: A directory contains tif format pictures, saved in CMEECourseWork/Week1
#Function: Convert all tif format pictures in the input directory into png format
#Output: Saved as jpg format in Results/
#Usage: bash tiff2png.sh [directory]
#Date: Oct 2020

if [ -z $1 ];
    then 
        echo "You have not input any directory"
    else
        if [ -e $1 ];
            then
                for f in "$1/"*.tif; 
                    do  
                        echo "Converting $f"; 
                        convert "$f"  "Results/$(basename "$f" .tif).png";
                    done
            else
                echo "The directory does not exist"
        fi
fi
echo "Done!"

**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
You have not input any directory
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00665s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#!/bin/bash
#Auther:Cong Liu (cong.liu20@imperial.ac.uk)
#Script: UnixPrac1.txt
#Work Path: /CMEECourseWork/Week1
#Input: Files in Data/, seen in each command line 
#Function: Seen in practicals of UNIX and Linux chapter in https://mhasoba.github.io/TheMulQuaBio/intro.html
#Output: txt files, saved in Results/
#Date: Oct, 2020

#Practical 1
wc -l ./Data/*.fasta >> ./Results/#1.txt

#Practical 2
sed -n 2,78104p ./Data/E.coli.fasta >> ./Results/#2.txt 

#Practical 3
wc -m ./Results/#2.txt >> ./Results/#3.txt 

#Practical 4
sed ':t;N;s/\n//;b t' ./Results/#2.txt | grep -o 'ATGC' | wc -l >> ./Results/#4.txt

#Practical 5
expr $(expr $(grep -o "A" ./Data/E.coli.fasta | wc -l)+$(grep -o "T" ./Data/E.coli.fasta | wc -l) | bc -l)/$(expr $(grep -o "C" ./Data/E.coli.fasta | wc -l)+$(grep -o "G" ./Data/E.coli.fasta | wc -l) | bc -l) | bc -l >> ./Results/#5.txt

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: variables.sh
#Work Path: CMEECourseWork/Week1
#Usage: bash variable.sh
#Date: Oct 2020


#Input: A string
MyVar="some string" #Defining variable
echo "The current value of the variable is $MyVar"
echo "Please enter a new string"
read MyVar
if [ -z "$MyVar" ]; #Checking if the length of MyVar is 0
    then
        echo "You have not input any string."
    else
        echo "The current value of the variable is $MyVar"
fi

#Input two numbers and output their sum
echo "Enter two numbers separated by space."
read a b #Inputting variables
if echo "$a" | grep -qE '^[0-9,\.,-,]+$'; 
    then
        if echo "$b" | grep -qE '^[0-9,\.,-]+$';
            then
                echo "You entered $a and $b. Their sum is"
                sum=$(echo $a + $b | bc)
                echo $sum
            else
                echo "$b is not a number"
        fi
    else
        echo "$a is not a number"
fi

echo "Done"

**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
The current value of the variable is some string
Please enter a new string
You have not input any string.
Enter two numbers separated by space.
 is not a number
Done

**********************************************************************

Code ran without errors

Time consumed = 0.00705s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: CountLines.sh
#Work Path: CMEECourseWork/Week1
#Input: A file in Data/
#Function: Count how many lines the input file has
#Output: The number of lines the input file has
#Usage: bash CountLines.sh [file]
#Date: Oct 2020

if [ -e Data/$1 ];
    then
        NumLines=$(wc -l < Data/$1)
        echo "The file $1 has $NumLines lines"
    else
        echo "The file $1 is not in Data/"
fi
echo "Done"

**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
The file  is not in Data/
Done

**********************************************************************

Code ran without errors

Time consumed = 0.00824s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Ann Phys},
  volume={18},
  pages={639--641},
  year={1905}
}

**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: csvtospace.sh
#Work Path: CMEECourseWork/Week1
#Input: A comma-separated-values file in Data/
#Function: Convert input file to a space-separated-values(ssv) file
#Output: A space-separated-values file in Results/
#Usage: bash csvtospace.sh [file]
#Date: Oct 2020

if [ -z $1 ];
    then
        echo "You have not input any file"
    else
        if [ -e Data/$1 ];
            then
                echo "Creating a space delomited version of $1 ..."
                cat Data/$1 | tr -s "," " " >> Results/$1.ssv
                echo "Done!"
            else
                echo "$1 is not in Data/"
        fi
fi

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
You have not input any file

**********************************************************************

Code ran without errors

Time consumed = 0.00524s

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong liu (cong.liu20@imperial.ac.uk)
#Script: CompileLaTeX.sh
#Work Path: CMEECourseWork/Week1
#Input: .tex and .bib files in Code/
#Function: Run LaTeX, save .pdf file in Writeup/ and remove other files
#Output: .pdf file in Writeup/
#Usage: bash Code/CompileLaTeX.sh [Base name of .tex]
#Date: Oct 2020

cd Code
pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex

rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.bbl
rm *.blg
cd ..
mv Code/*.pdf Writeup

**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2020-02-02> patch level 2
L3 programming layer <2020-02-14> File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=pdf
**********************************************************************

Encountered error (or warning):
CompileLaTeX.sh: line 11: cd: Code: No such file or directory
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory
rm: cannot remove '*.bbl': No such file or directory
rm: cannot remove '*.blg': No such file or directory
mv: cannot stat 'Code/*.pdf': No such file or directory

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: boilerplate.sh
#Work Path: CMEECourseWork/Week1
#Input: None
#Function: Simple boilerplate for shell scripts
#Output:
#Usage: bash boilerplate.sh
#Date: Oct 2020

echo -e "\nThis is a shell script \n" # "-e" enables interpretation of backslash escapes

#exit

**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script 


**********************************************************************

Code ran without errors

Time consumed = 0.00427s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Cong Liu}

\date{11/10/2020}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper must be cool!
  \end{abstract}
  
  \section{Introduction}
    Blah Blah!
  
  \section{Materials \& Methods}
  One of the most famous equations is:
  \begin{equation}
    E = mc^2
  \end{equation}
  This equation was first proposed by Einstein in 1905 
  \cite{einstein1905does}
  
  \bibliographystyle{plain}
  \bibliography{FirstBiblio}
\end{document}


**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: tabtocsv.sh
#Work Path: CMEECourseWork/Week1
#Input: A file in Data/
#Function: Substitute the tabs in input files with commas
#Output: Saved as a csv file in Results/
#Usage: bash tabtocsv.sh [file]
#Date: Oct 2020

if [ -z $1 ];
    then
        echo "You have not input any file"
    else
        if [ -e Data/$1 ];
            then
                File=Data/$1
                echo "Creating a comma delomited version of $1 ..."
                cat $File | tr -s "\t" "," >> Results/$1.csv
                echo "Done!"
            else
                echo "$1 is not in Data/"
        fi
fi

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
You have not input any file

**********************************************************************

Code ran without errors

Time consumed = 0.00692s

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Auther: Cong Liu (cong.liu20@imperial.ac.uk)
#Script: MyExampleScript.sh
#Work Path: CMEECourseWork/Week1
#Usage: bash MyExampleScript.sh
#Date: Oct, 2020

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"
echo "Hello $USER"
echo

**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 


**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00375s

======================================================================
======================================================================
Finished running scripts

Ran into 1 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 99.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!